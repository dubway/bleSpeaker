//Import Libraries
#include <Adafruit_NeoPixel.h>
#include <Encoder.h>

// Pins
#define PIN 6                // LED - Data in
const int buttonPin = 7;    // Button - Encoder
const int encoderPinL = 5;
const int encoderPinR = 3;

// LED.Ring
Adafruit_NeoPixel strip = Adafruit_NeoPixel(16, PIN, NEO_GRB + NEO_KHZ800);
Encoder myEnc(encoderPinL, encoderPinR);

// Rotary Encoder
long previousMillis = 0;
long interval = 4000;
long oldPosition  = -999;
int volume = 15;
boolean on = false;

// Button State
int buttonPushCounter = 0;   // counter for the number of button presses
int buttonState = 0;         // current state of the button
int lastButtonState = 0;     // previous state of the button
int mode = 0;


void setup() {
  pinMode(buttonPin, INPUT);
  Serial.begin(9600);
  
  // LEDs
  strip.begin();
  strip.show();              // Initialize all pixels to 'off'
}

void loop() {
  
  // Control - Functions
  checkKnob();              // Check Rotary Encoder
  checkButton();            // Check Button State
  strip.show();             // Update and Display LEDs
}


// ------------------------------------------------------------------- Main Control / Encoder + LED.Ring

void checkButton(){
  if(on == false){
    buttonState = digitalRead(buttonPin);
    if (buttonState != lastButtonState) {
      if (buttonState == HIGH) {
        buttonPushCounter++;
      } 
      else {
        //Serial.println("off");
       clear();
       mode++;
       if(mode>4){
         mode = 0;
       }
      }
    }
    lastButtonState = buttonState;
    Serial.println(mode);
    display(mode);
  }
}

void checkKnob(){
  long newPosition = myEnc.read();
  unsigned long currentMillis = millis();
  
  if(newPosition != oldPosition && newPosition > oldPosition+1){
    oldPosition = newPosition;
    volume += 1;
//    Serial.print("Left: ");
//    Serial.println(oldPosition);

    Serial.println("On");
    on = true;
    
  }
    if(newPosition != oldPosition && newPosition < oldPosition-1){
    oldPosition = newPosition;
    volume -= 1;
//    Serial.print("Right: ");
//    Serial.println(oldPosition);
    Serial.println("On");
    on = true;
  }
  
  if(volume>=15){
    volume = 15;
  }
  if(volume<=0){
    volume = 0;
  }
  
  if(on == true){
    clear();
    for(int i = 16; i>volume; i--){
      strip.setBrightness(25);
      strip.setPixelColor(i, 5, 20, 50);
    }
    for(int i = 0; i<volume; i++){
      strip.setPixelColor(volume, 0, 0, 0);
    }
    //previousMillis = currentMillis;
  } else if(on == false){
    //Serial.println("Off");
    clear();
  }

  
 if(currentMillis - previousMillis > interval) { 
    previousMillis = currentMillis;
    on = false;
    Serial.println("Off");
  }
  
}

void display(int a){
  if(a == 0){
      clear();
      //strip.show();
  }
  if(a == 1){
    clear();
    for(int i = 0; i<=15; i++){
      strip.setPixelColor(i, 0, 255, 0);
      //strip.show();
    }
  }
  if(a == 2){
    clear();
    for(int i = 0; i<=15; i++){
      strip.setPixelColor(i, 0, 0, 255);
      //strip.show();
    }
  }
  if(a == 3){
    clear();
    for(int i = 0; i<=15; i++){
      strip.setPixelColor(i, 255, 255, 255);
      //strip.show();
    }
  }
  if(a == 4){
    clear();
    for(int i = 0; i<=15; i++){
      strip.setPixelColor(i, 255, 0, 0);
      //strip.show();
    }
  }
  //strip.show();
}

void clear(){
    for(int i = 0; i<=15; i++){
      strip.setPixelColor(i, 0, 0, 0);
      //strip.show();
    }
}
